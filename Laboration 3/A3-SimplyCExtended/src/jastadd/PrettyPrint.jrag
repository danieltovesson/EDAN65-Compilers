import java.io.PrintStream;

aspect PrettyPrint {
	public void ASTNode.prettyPrint(PrintStream out) {
		prettyPrint(out, "");
		out.println();
	}

	public void ASTNode.prettyPrint(PrintStream out, String ind) {
		for (int i = 0; i < getNumChild(); ++i) {
			getChild(i).prettyPrint(out, ind);
		}
	}

	public void Program.prettyPrint(PrintStream out, String ind) {
		for (int i = 0; i < getNumFunction(); ++i) {
			getFunction(i).prettyPrint(out, ind);
		}
	}

	public void Function.prettyPrint(PrintStream out, String ind) {
		out.print(ind + "int ");
		getName().prettyPrint(out, ind);
		out.print("(");
		if (hasParameter()) {
			int i;
			for (i = 0; i < getNumParameter(); ++i) {
				getParameter(i).prettyPrint(out, ind);
				out.print(", ");
			}
			getParameter(i).prettyPrint(out, ind);
		}
		out.print(")");
		getCodeBlock().prettyPrint(out, ind + "  ");
		out.println(ind);
	}

	public void Block.prettyPrint(PrintStream out, String ind) {
		out.println(" {");
		for (int i = 0; i < getNumChild(); ++i) {
			getChild(i).prettyPrint(out, ind);
		}
		out.print("}");
	}

	public void Declaration.prettyPrint(PrintStream out, String ind) {
		out.print(ind + "int ");
		getName().prettyPrint(out, ind);
		if (hasAssignment()) {
			out.print(" = ");
			getAssignment().prettyPrint(out, ind);
		}
		out.println(";");
	}

	public void Assignment.prettyPrint(PrintStream out, String ind) {
		getName().prettyPrint(out, ind);
		out.print(" = ");
		getValue().prettyPrint(out, ind);
		out.println(";");
	}

	public void WhileStmt.prettyPrint(PrintStream out, String ind) {
		out.print(ind + "while(");
		getCondition().prettyPrint(out, ind);
		out.println(") {");
		getCodeBlock().prettyPrint(out, ind);
		out.println(ind + "}");
	}

	public void IfStmt.prettyPrint(PrintStream out, String ind) {
		out.print(ind + "if(");
		getCondition().prettyPrint(out, ind);
		out.print(")");
		getCodeBlock().prettyPrint(out, ind);
		if (hasElse()) {
			getElse().prettyPrint(out, ind);
		}
	}

	public void Return.prettyPrint(PrintStream out, String ind) {
		out.print(ind + "return ");
		getReturn().prettyPrint(out, ind);
		out.println(";");
	}

	public void Print.prettyPrint(PrintStream out, String ind) {
		getPrint().prettyPrint(out, ind);
	}

	public void FuncCall.prettyPrint(PrintStream out, String ind) {
		getName().prettyPrint(out, ind);
		getExpr().prettyPrint(out, ind);
	}

	public void Mul.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" * ");
		getRight().prettyPrint(out, ind);
	}

	public void Div.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" / ");
		getRight().prettyPrint(out, ind);
	}

	public void Mod.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" % ");
		getRight().prettyPrint(out, ind);
	}

	public void Add.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" + ");
		getRight().prettyPrint(out, ind);
	}

	public void Sub.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" - ");
		getRight().prettyPrint(out, ind);
	}

	public void Lesser.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" < ");
		getRight().prettyPrint(out, ind);
	}

	public void Greater.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" > ");
		getRight().prettyPrint(out, ind);
	}

	public void LesserEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" <= ");
		getRight().prettyPrint(out, ind);
	}

	public void GreaterEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" >= ");
		getRight().prettyPrint(out, ind);
	}

	public void NotEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" != ");
		getRight().prettyPrint(out, ind);
	}

	public void Equal.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" == ");
		getRight().prettyPrint(out, ind);
	}

	public void IntValue.prettyPrint(PrintStream out, String ind) {
		out.print(getINTEGER());
	}

	public void Id.prettyPrint(PrintStream out, String ind) {
		out.print(getID());
	}

	public void IdDecl.prettyPrint(PrintStream out, String ind) {
		out.print(getID());
	}

	public void IdUse.prettyPrint(PrintStream out, String ind) {
		out.print(getID());
	}
}
